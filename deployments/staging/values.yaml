# Staging Environment - Moderate Resources
# HA configuration, production-like setup

# MySQL - Using official MySQL image (no Bitnami)
mysql:
  enabled: true
  image: mysql
  tag: "8.4"
  rootPassword: "changeme123"
  database: "pmtp"
  user: "pmtp"
  password: "changeme123"
  storage: "20Gi"
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 2Gi

# Valkey - Redis-compatible cache
valkey:
  enabled: true
  # Enable persistent storage
  dataStorage:
    enabled: true
    requestedSize: 10Gi
    keepPvc: true
  # Enable authentication with ACL
  auth:
    enabled: true
    aclConfig: |
      user default on >changeme123 ~* &* +@all
  # Run with 1 replica for staging (replication architecture not supported by this chart)
  replicaCount: 1
  # Resource limits
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# MinIO
minio:
  enabled: true
  chart:
    repo: https://charts.min.io/
    name: minio
    version: "5.x.x"
  values:
    mode: distributed
    replicas: 4
    drivesPerNode: 1
    persistence:
      size: 50Gi
    rootUser: admin
    rootPassword: "changeme123"
    buckets:
      - name: pm-tp-files
        policy: none

# NATS
nats:
  enabled: true
  chart:
    repo: https://nats-io.github.io/k8s/helm/charts/
    name: nats
    version: "1.x.x"
  values:
    nats:
      jetstream:
        enabled: true
        fileStore:
          pvc:
            size: 20Gi
    cluster:
      enabled: true
      replicas: 3

# OpenSearch - Search Engine
# IMPORTANT: Requires vm.max_map_count=262144 on all nodes
# Run on each node: sudo sysctl -w vm.max_map_count=262144
opensearch:
  enabled: true
  chart:
    repo: https://opensearch-project.github.io/helm-charts/
    name: opensearch
    version: "2.x.x"
  values:
    replicas: 3
    minimumMasterNodes: 2
    persistence:
      size: 30Gi
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi

# Keycloak - Identity and Access Management (removed from Fleet - deployed manually)
# keycloak:
#   enabled: false

# Prometheus
prometheus:
  enabled: true
  chart:
    repo: https://prometheus-community.github.io/helm-charts
    name: prometheus
    version: "25.x.x"
  values:
    server:
      retention: 15d
      persistentVolume:
        size: 30Gi
    alertmanager:
      enabled: true

# Grafana
grafana:
  enabled: true
  chart:
    repo: https://grafana.github.io/helm-charts
    name: grafana
    version: "7.x.x"
  values:
    adminUser: admin
    adminPassword: "changeme123"
    persistence:
      enabled: true
      size: 10Gi
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://prometheus-server
            isDefault: true

# cert-manager - TLS Certificate Management
certManager:
  enabled: true
  installCRDs: true
  # Email for Let's Encrypt notifications
  email: erik.hanson@transperfect.com
  # Ingress class to use for ACME HTTP01 challenges
  ingressClass: nginx
  # Resource limits for cert-manager components
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 128Mi
  webhook:
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 100m
        memory: 128Mi
  cainjector:
    resources:
      requests:
        cpu: 10m
        memory: 32Mi
      limits:
        cpu: 100m
        memory: 128Mi
